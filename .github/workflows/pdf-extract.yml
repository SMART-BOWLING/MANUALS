name: Extract PDF Text

on: 
  workflow_dispatch
  push:
    paths:
      - 'manuals/**.pdf'

jobs:
  extract:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: pip install pdfplumber
      
    - name: Extract text from PDFs
      run: |
        mkdir -p extracted_text
        
        for pdf in manuals/*.pdf; do
          echo "Processing: $pdf"
          filename=$(basename "$pdf" .pdf)
          
          python -c "
import pdfplumber
import json
import re

texts = []
try:
    with pdfplumber.open('$pdf') as pdf:
        for i, page in enumerate(pdf.pages[:3]):  # First 3 pages
            text = page.extract_text()
            if text:
                clean_text = re.sub(r'\s+', ' ', text).strip()
                if len(clean_text) > 50:
                    texts.append({
                        'file': '$filename.pdf',
                        'page': i+1,
                        'text': clean_text[:500]
                    })
    
    if texts:
        with open(f'extracted_text/{filename}.json', 'w') as f:
            json.dump(texts, f, indent=2)
        print(f'✓ Extracted {len(texts)} pages from $pdf')
    else:
        print(f'✗ No text found in $pdf')
        
except Exception as e:
    print(f'Error with $pdf: {e}')
          "
        done

    - name: Create manuals.json
      run: |
        python -c "
import json
import glob

all_data = []
for json_file in glob.glob('extracted_text/*.json'):
    try:
        with open(json_file, 'r') as f:
            data = json.load(f)
            all_data.extend(data)
    except:
        continue

with open('manuals/manuals.json', 'w') as f:
    json.dump(all_data, f, indent=2)

print(f'Created manuals.json with {len(all_data)} segments')
        "
